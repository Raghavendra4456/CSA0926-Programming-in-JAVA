import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

public class ArrayStatistics {
    public static void main(String[] args) {
        double[] numbers = { 5, 2, 8, 5, 7, 1, 9, 3, 5, 4, 6 };

        double mean = calculateMean(numbers);
        double median = calculateMedian(numbers);
        double mode = calculateMode(numbers);

        System.out.println("Mean: " + mean);
        System.out.println("Median: " + median);
        System.out.println("Mode: " + mode);
    }

    private static double calculateMean(double[] numbers) {
        double sum = 0;
        for (double num : numbers) {
            sum += num;
        }
        return sum / numbers.length;
    }

    private static double calculateMedian(double[] numbers) {
        Arrays.sort(numbers);
        int length = numbers.length;

        if (length % 2 == 0) {
            int mid1 = length / 2 - 1;
            int mid2 = length / 2;
            return (numbers[mid1] + numbers[mid2]) / 2.0;
        } else {
            int mid = length / 2;
            return numbers[mid];
        }
    }

    private static double calculateMode(double[] numbers) {
        Map<Double, Integer> frequencyMap = new HashMap<>();

        for (double num : numbers) {
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
        }

        double mode = 0;
        int maxFrequency = 0;

        for (Map.Entry<Double, Integer> entry : frequencyMap.entrySet()) {
            if (entry.getValue() > maxFrequency) {
                maxFrequency = entry.getValue();
                mode = entry.getKey();
            }
        }

        return mode;
    }
}
